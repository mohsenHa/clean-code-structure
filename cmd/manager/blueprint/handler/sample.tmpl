package {{.}}handler

import (
	"clean-code-structure/param/{{.}}param"
    "clean-code-structure/pkg/httpmsg"
    "clean-code-structure/validator"
    "errors"
    "github.com/labstack/echo/v4"
    "net/http"
)

func (h Handler) sample(c echo.Context) error {
	var req {{.}}param.SampleRequest
	if err := c.Bind(&req); err != nil {
		return echo.NewHTTPError(http.StatusBadRequest)
	}

	resp, err := h.{{.}}Service.Sample(req)
	var vErr validator.Error

	if errors.As(err, &vErr) {
        msg, code := httpmsg.Error(err)
        return c.JSON(code, echo.Map{
        	"message": msg,
        	"errors":  vErr.Fields,
        })
    }


	if err != nil {
		return echo.NewHTTPError(http.StatusBadRequest, err.Error())
	}
	return c.JSON(http.StatusOK, resp)

}
